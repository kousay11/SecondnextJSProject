// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../app/generated/prisma"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum UserRole {
  ADMIN
  CLIENT
}

enum MessageStatus {
  PENDING
  PROCESSED
  CLOSED
}

enum MessageSubject {
  GENERAL_INQUIRY
  TECHNICAL_SUPPORT
  BILLING_QUESTION
  PRODUCT_QUESTION
  COMPLAINT
  SUGGESTION
  OTHER
}

model User {
  id           Int      @id @default(autoincrement())
  clerkUserId  String?  @unique
  email        String   @unique
  name         String
  role         UserRole @default(CLIENT)
  followers    Int      @default(0)
  isActive     Boolean  @default(true)
  registeredAt DateTime @default(now())

  // Relations
  messages Message[]
}

model Product {
  id           Int       @id @default(autoincrement())
  name         String
  description  String?
  price        Float
  imageProduct String? // URL ou chemin de l'image du produit
  createdAt    DateTime  @default(now())
  updatedAt    DateTime? @updatedAt
}

model Message {
  id          Int            @id @default(autoincrement())
  userId      Int
  phone       String
  subject     MessageSubject
  message     String         @db.Text
  status      MessageStatus  @default(PENDING)
  createdAt   DateTime       @default(now())
  processedAt DateTime?

  // Relations
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId])
  @@index([status])
  @@index([createdAt])
}
